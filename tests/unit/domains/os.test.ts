import { describe, expect, test } from 'bun:test';
import { DOTSX } from '@/lib/constants';
import { debianDomain } from '../../../src/domains/os/debian';

describe('domains/os', () => {
  describe('debianDomain', () => {
    test('should have correct basic properties', () => {
      expect(debianDomain.name).toBe('debian');
      expect(debianDomain.type).toBe('os');
      expect(debianDomain.availableOs).toEqual(['debian']);
    });

    test('should have package managers defined', () => {
      expect(debianDomain.packageManagers).toBeDefined();
      expect(typeof debianDomain.packageManagers).toBe('object');

      const packageManagers = debianDomain.packageManagers!;
      expect(Object.keys(packageManagers)).toContain('apt');
      expect(Object.keys(packageManagers)).toContain('snap');
    });

    test('should have APT package manager correctly configured', () => {
      const apt = debianDomain.packageManagers!.apt;

      expect(apt.configPath).toBe(DOTSX.OS.DEBIAN.APT);
      expect(apt.install).toBe('sudo apt install -y %s');
      expect(apt.remove).toBe('sudo apt remove -y %s');
      expect(apt.status).toBe('dpkg -l | grep "^ii" | grep -w " %s "');
      expect(apt.defaultContent).toContain('APT packages');
      expect(apt.defaultContent).toContain('Generated by dotsx');
      expect(apt.defaultContent).toContain('Add package names, one per line');
      expect(apt.defaultContent).toContain('Lines starting with # are ignored');
    });

    test('should have Snap package manager correctly configured', () => {
      const snap = debianDomain.packageManagers!.snap;

      expect(snap.configPath).toBe(DOTSX.OS.DEBIAN.SNAP);
      expect(snap.install).toBe('sudo snap install %s');
      expect(snap.remove).toBe('sudo snap remove %s');
      expect(snap.status).toBe('snap list | grep -w "%s "');
      expect(snap.defaultContent).toContain('Snap packages');
      expect(snap.defaultContent).toContain('Generated by dotsx');
      expect(snap.defaultContent).toContain('Add package names, one per line');
      expect(snap.defaultContent).toContain('Lines starting with # are ignored');
    });

    test('should use placeholder %s in commands', () => {
      const apt = debianDomain.packageManagers!.apt;
      const snap = debianDomain.packageManagers!.snap;

      expect(apt.install).toContain('%s');
      expect(apt.remove).toContain('%s');
      expect(apt.status).toContain('%s');

      expect(snap.install).toContain('%s');
      expect(snap.remove).toContain('%s');
      expect(snap.status).toContain('%s');
    });

    test('should have default content formatted correctly', () => {
      const apt = debianDomain.packageManagers!.apt;
      const snap = debianDomain.packageManagers!.snap;

      // Both should start with # and end with newline for proper formatting
      expect(apt.defaultContent).toMatch(/^\#.*\n$/s);
      expect(snap.defaultContent).toMatch(/^\#.*\n$/s);

      // Should contain multiple lines
      expect(apt.defaultContent.split('\n').length).toBeGreaterThan(1);
      expect(snap.defaultContent.split('\n').length).toBeGreaterThan(1);
    });

    test('should not have symlink paths (OS domains don\'t use symlinks)', () => {
      expect(debianDomain.symlinkPaths).toBeUndefined();
    });
  });
});